Transform: AWS::Serverless-2016-10-31
Resources:
  StateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Definition:
        StartAt: LambdaTask
        States:
          LambdaTask:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Parameters:
              Payload.$: $
              FunctionName: ${LambdaFunction1}
            End: true
      Logging:
        Level: ALL
        IncludeExecutionData: true
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt StateMachineLogGroup.Arn
      Policies:
        - AWSXrayWriteOnlyAccess
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogDelivery
                - logs:GetLogDelivery
                - logs:UpdateLogDelivery
                - logs:DeleteLogDelivery
                - logs:ListLogDeliveries
                - logs:PutResourcePolicy
                - logs:DescribeResourcePolicies
                - logs:DescribeLogGroups
              Resource: '*'
      Tracing:
        Enabled: true
      Type: STANDARD
      DefinitionSubstitutions:
        LambdaFunction1: !Ref AWS::NoValue
  StateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub
        - /aws/vendedlogs/states/${AWS::StackName}-${ResourceId}-Logs
        - ResourceId: StateMachine
  createDatasetGroup:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: createDatasetGroup
      CodeUri: src/createDatasetGroup
      Handler: handler.handler
      Runtime: python3.11
      MemorySize: 128
      Timeout: 60
      Tracing: Active
  createDatasetGroupLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${createDatasetGroup}
  createDataset:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: createDataset
      CodeUri: src/createDatasetSchema
      Handler: handler.handler
      Runtime: python3.11
      MemorySize: 128
      Timeout: 60
      Tracing: Active
  createDatasetLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${createDataset}
  createFilter:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: createFilter
      CodeUri: src/createFilter
      Handler: handler.handler
      Runtime: python3.11
      MemorySize: 128
      Timeout: 60
      Tracing: Active
  createFilterLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${createFilter}
  createEventTracker:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: createEventTracker
      CodeUri: src/createEventTracker
      Handler: handler.handler
      Runtime: python3.11
      MemorySize: 128
      Timeout: 60
      Tracing: Active
  createEventTrackerLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${createEventTracker}
  createSchema:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: createSchema
      CodeUri: src/createSchema
      Handler: handler.handler
      Runtime: python3.11
      MemorySize: 128
      Timeout: 60
      Tracing: Active
  createSchemaLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${createSchema}
  createSolution:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: createSolution
      CodeUri: src/createSolution
      Handler: handler.handler
      Runtime: python3.11
      MemorySize: 128
      Timeout: 60
      Tracing: Active
  createSolutionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${createSolution}
  createSolutionVersion:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: createSolutionVersion
      CodeUri: src/createSolutionVersion
      Handler: handler.handler
      Runtime: python3.11
      MemorySize: 128
      Timeout: 60
      Tracing: Active
  createSolutionVersionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${createSolutionVersion}
  createCampaign:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: createCampaign
      CodeUri: src/createCampaign
      Handler: handler.handler
      Runtime: python3.11
      MemorySize: 128
      Timeout: 60
      Tracing: Active
  createCampaignLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${createCampaign}